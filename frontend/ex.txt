import React, { useState, useEffect, useRef } from 'react';
import {
  Smartphone, ShoppingCart, GraduationCap, Users, Globe, Brain, Mail, BarChart, LayoutDashboard, LogOut, BookOpen, Package, LineChart, Home, Settings, HelpCircle, Bell, User, Zap, PlusCircle, Trash2, Edit, CheckCircle, XCircle, FileText, UploadCloud, Search, MessageSquare, Briefcase, Image, BellRing, CalendarDays, Megaphone, Lightbulb, Link, DollarSign, CreditCard, FormInput, Gift, Bot, Code, CalendarCheck, Tag, Sparkles, Menu, X
} from 'lucide-react';

// Reusable Button Component
const Button = ({ children, onClick, className = '', variant = 'primary', icon: Icon, type = 'button', theme }) => { // Added theme prop
  const baseStyle = "px-6 py-3 rounded-xl font-semibold transition-all duration-300 hover:shadow-xl hover:-translate-y-1 relative overflow-hidden group";
  let variantStyle = "";

  switch (variant) {
    case 'primary':
      variantStyle = "text-white bg-gradient-to-r from-blue-500 to-cyan-500 shadow-lg";
      break;
    case 'secondary':
      // Explicitly setting dark mode styles based on the 'theme' prop
      variantStyle = `border border-gray-300 bg-gray-200 hover:bg-gray-300 ${
        theme === 'dark' ? 'text-white bg-gray-900 border-gray-700 hover:bg-gray-700' : 'text-gray-900'
      }`;
      break;
    case 'danger':
      variantStyle = "text-white bg-red-500 shadow-lg hover:bg-red-600";
      break;
    case 'success':
      variantStyle = "text-white bg-green-500 shadow-lg hover:bg-green-600";
      break;
    case 'icon':
      variantStyle = "p-3 rounded-full text-white bg-blue-500 hover:bg-blue-600 flex items-center justify-center";
      break;
    default:
      variantStyle = "text-white bg-blue-500 shadow-lg";
  }

  return (
    <button type={type} onClick={onClick} className={`${baseStyle} ${variantStyle} ${className}`}>
      {Icon && <Icon className="inline-block mr-2" size={20} />}
      {children}
      {variant === 'primary' && (
        <span className="absolute top-0 left-[-100%] w-full h-full bg-gradient-to-r from-transparent via-white/20 to-transparent transition-all duration-500 group-hover:left-[100%]"></span>
      )}
    </button>
  );
};

// Reusable InputGroup Component
const InputGroup = ({ label, id, type = 'text', placeholder, value, onChange, className = '', theme, children, isTextArea = false, rows = 3, selectOptions = [] }) => (
  <div>
    <label htmlFor={id} className={`block text-sm font-medium mb-2 ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
      {label}
    </label>
    {isTextArea ? (
      <textarea
        id={id}
        rows={rows}
        className={`w-full p-3 rounded-lg border focus:ring-blue-500 focus:border-blue-500 ${theme === 'dark' ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-gray-300 text-gray-900'} ${className}`}
        placeholder={placeholder}
        value={value}
        onChange={onChange}
      ></textarea>
    ) : selectOptions.length > 0 ? (
      <select
        id={id}
        className={`w-full p-3 rounded-lg border focus:ring-blue-500 focus:border-blue-500 ${theme === 'dark' ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-gray-300 text-gray-900'} ${className}`}
        value={value}
        onChange={onChange}
      >
        {selectOptions.map((option, index) => (
          <option key={index} value={option.value}>{option.label}</option>
        ))}
      </select>
    ) : (
      <input
        type={type}
        id={id}
        className={`w-full p-3 rounded-lg border focus:ring-blue-500 focus:border-blue-500 ${theme === 'dark' ? 'bg-gray-800 border-gray-700 text-white' : 'bg-white border-gray-300 text-gray-900'} ${className}`}
        placeholder={placeholder}
        value={value}
        onChange={onChange}
      />
    )}
    {children}
  </div>
);

// Reusable Card Component
const Card = ({ children, theme, className = '' }) => (
  <div className={`p-8 rounded-2xl border transition-all duration-300 hover:-translate-y-2 hover:shadow-xl ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border-gray-800 hover:border-gray-700' : 'bg-gray-100 backdrop-blur-lg border-gray-200 hover:border-gray-300'} ${className}`}>
    {children}
  </div>
);

// Reusable SectionHeader Component
const SectionHeader = ({ icon: Icon, title, subtitle, theme }) => (
  <div className="text-center mb-16">
    <div className={`inline-flex items-center space-x-2 backdrop-blur-md border px-4 py-2 rounded-full text-sm font-semibold uppercase tracking-wider mb-4 ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-white' : 'bg-gray-100 border-gray-200 text-gray-900'}`}>
      {Icon && <Icon className="inline-block mr-2" size={20} />} <span>{title}</span>
    </div>
    <h2 className={`text-5xl font-extrabold mb-4 tracking-tight ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{subtitle}</h2>
    <p className={`text-lg max-w-2xl mx-auto ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{subtitle}</p>
  </div>
);

const App = () => {
  // State for theme toggle
  const [theme, setTheme] = useState('dark');
  // New state for user login status
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  // State for mobile menu open/close
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  // State for dashboard sidebar collapse
  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);

  // Effect to apply theme to body
  useEffect(() => {
    document.body.setAttribute('data-theme', theme);
    // Adjust header background on initial load and theme change
    const header = document.querySelector('header');
    if (header) {
      header.className = `fixed top-0 w-full z-50 transition-all duration-400 ease-in-out ${
        theme === 'dark' ? 'bg-black bg-opacity-70 backdrop-blur-lg border-b border-gray-700' : 'bg-white bg-opacity-90 backdrop-blur-lg border-b border-gray-200'
      }`;
    }
  }, [theme]);

  // Function to toggle theme
  const toggleTheme = () => {
    setTheme(prevTheme => (prevTheme === 'dark' ? 'light' : 'dark'));
  };

  // Function to handle login (simple toggle for demonstration)
  const handleLogin = () => {
    setIsLoggedIn(true);
  };

  // Function to handle logout
  const handleLogout = () => {
    setIsLoggedIn(false);
    setIsSidebarCollapsed(false); // Reset sidebar on logout
  };

  // Effect for header background change on scroll
  useEffect(() => {
    const handleScroll = () => {
      const header = document.querySelector('header');
      if (header) {
        if (window.scrollY > 100) {
          header.className = `fixed top-0 w-full z-50 transition-all duration-400 ease-in-out ${
            theme === 'dark' ? 'bg-black bg-opacity-90 backdrop-blur-lg border-b border-gray-800' : 'bg-white bg-opacity-95 backdrop-blur-lg border-b border-gray-300'
          }`;
        } else {
          header.className = `fixed top-0 w-full z-50 transition-all duration-400 ease-in-out ${
            theme === 'dark' ? 'bg-black bg-opacity-70 backdrop-blur-lg border-b border-gray-700' : 'bg-white bg-opacity-80 backdrop-blur-lg border-b border-gray-200'
          }`;
        }
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, [theme]); // Re-run effect if theme changes

  // Component for the Header section
  const Header = ({ isLoggedIn, handleLogout, handleLogin, toggleTheme, theme, setActiveView, toggleMobileMenu, isMobileMenuOpen }) => (
    <header className={`fixed top-0 w-full z-50 transition-all duration-400 ease-in-out ${theme === 'dark' ? 'bg-black bg-opacity-70 backdrop-blur-lg border-b border-gray-700' : 'bg-white bg-opacity-90 backdrop-blur-lg border-b border-gray-200'}`}>
      <nav className="max-w-7xl mx-auto flex justify-between items-center px-4 py-4">
        <div className={`text-2xl font-bold tracking-tight relative group ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
          Mewayz
          <span className="absolute bottom-0 left-0 w-full h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 opacity-0 transition-opacity duration-300 group-hover:opacity-100"></span>
        </div>

        {/* Desktop Navigation */}
        <ul className="hidden md:flex space-x-10">
          {isLoggedIn ? (
            <>
              <li>
                <a href="#dashboard" onClick={() => setActiveView('overview')} className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">
                  Dashboard<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span>
                </a>
              </li>
              <li>
                <a href="#courses" onClick={() => setActiveView('courses')} className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">
                  Courses<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span>
                </a>
              </li>
              <li>
                <a href="#products" onClick={() => setActiveView('products')} className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">
                  Products<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span>
                </a>
              </li>
              <li>
                <a href="#analytics" onClick={() => setActiveView('analytics')} className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">
                  Analytics<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span>
                </a>
              </li>
            </>
          ) : (
            <>
              <li><a href="#about" className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">About<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span></a></li>
              <li><a href="#features" className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">Features<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span></a></li>
              <li><a href="#pricing" className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">Pricing<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span></a></li>
              <li><a href="#testimonials" className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">Testimonials<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span></a></li>
              <li><a href="#contact" className="text-gray-400 hover:text-white font-medium relative py-2 transition-colors duration-300 group">Contact<span className="absolute bottom-0 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300 group-hover:w-full"></span></a></li>
            </>
          )}
        </ul>

        {/* Action Buttons & Mobile Menu Toggle */}
        <div className="flex items-center space-x-4">
          {/* Pass the theme prop to the Button component */}
          <Button onClick={toggleTheme} className="p-3 rounded-xl" variant="secondary" theme={theme}>
            {theme === 'dark' ? '🌙' : '☀️'}
          </Button>
          {isLoggedIn ? (
            <Button onClick={handleLogout} icon={LogOut} variant="danger" theme={theme}>Logout</Button>
          ) : (
            <>
              {/* Pass the theme prop to the Button component */}
              <Button onClick={handleLogin} variant="secondary" className="hidden md:block" theme={theme}>Login</Button>
              <Button href="#signup" variant="primary" className="hidden md:block" theme={theme}>Get Started</Button>
            </>
          )}
          <button onClick={toggleMobileMenu} className="md:hidden p-2 rounded-lg text-gray-400 hover:text-white transition-colors">
            {isMobileMenuOpen ? <X size={28} /> : <Menu size={28} />}
          </button>
        </div>
      </nav>

      {/* Mobile Menu Overlay */}
      <div className={`fixed inset-0 bg-black bg-opacity-90 z-40 md:hidden transition-opacity duration-300 ${isMobileMenuOpen ? 'opacity-100 visible' : 'opacity-0 invisible'}`}>
        <div className={`absolute top-0 right-0 w-full h-full p-6 transform transition-transform duration-300 ${isMobileMenuOpen ? 'translate-x-0' : 'translate-x-full'}`}>
          <button onClick={toggleMobileMenu} className="absolute top-6 right-6 p-2 rounded-lg text-white hover:bg-gray-700">
            <X size={28} />
          </button>
          <ul className="flex flex-col items-center justify-center h-full space-y-8 text-xl font-bold">
            {isLoggedIn ? (
              <>
                <li><a href="#dashboard" onClick={() => { setActiveView('overview'); toggleMobileMenu(); }} className="text-white hover:text-blue-400">Dashboard</a></li>
                <li><a href="#courses" onClick={() => { setActiveView('courses'); toggleMobileMenu(); }} className="text-white hover:text-blue-400">Courses</a></li>
                <li><a href="#products" onClick={() => { setActiveView('products'); toggleMobileMenu(); }} className="text-white hover:text-blue-400">Products</a></li>
                <li><a href="#analytics" onClick={() => { setActiveView('analytics'); toggleMobileMenu(); }} className="text-white hover:text-blue-400">Analytics</a></li>
              </>
            ) : (
              <>
                <li><a href="#about" onClick={toggleMobileMenu} className="text-white hover:text-blue-400">About</a></li>
                <li><a href="#features" onClick={toggleMobileMenu} className="text-white hover:text-blue-400">Features</a></li>
                <li><a href="#pricing" onClick={toggleMobileMenu} className="text-white hover:text-blue-400">Pricing</a></li>
                <li><a href="#testimonials" onClick={toggleMobileMenu} className="text-white hover:text-blue-400">Testimonials</a></li>
                <li><a href="#contact" onClick={toggleMobileMenu} className="text-white hover:text-blue-400">Contact</a></li>
                {/* Pass the theme prop to the Button component */}
                <li><Button onClick={() => { handleLogin(); toggleMobileMenu(); }} variant="secondary" className="w-full mt-4" theme={theme}>Login</Button></li>
                <li><Button href="#signup" variant="primary" className="w-full mt-2" theme={theme}>Get Started</Button></li>
              </>
            )}
          </ul>
        </div>
      </div>
    </header>
  );

  // Dashboard Overview Component
  const DashboardOverview = ({ theme }) => (
    <div className="max-w-7xl mx-auto py-8 px-4">
      <SectionHeader
        icon={LayoutDashboard}
        title="Your Dashboard"
        subtitle="Welcome Back, Creator!"
        description="Here's a quick overview of your Mewayz account."
        theme={theme}
      />

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-16">
        {/* Dashboard Card 1 */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Total Revenue</h3>
          <p className="text-5xl font-extrabold bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text">$12,345</p>
          <p className={`text-sm mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>+15% from last month</p>
          {/* Placeholder for API call: Fetch total revenue from /api/financial/revenue */}
        </Card>

        {/* Dashboard Card 2 */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>New Subscribers</h3>
          <p className="text-5xl font-extrabold bg-gradient-to-r from-green-500 to-teal-500 text-transparent bg-clip-text">567</p>
          <p className={`text-sm mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>+8% from last week</p>
          {/* Placeholder for API call: Fetch new subscribers from /api/crm/subscribers or /api/email-marketing/subscribers */}
        </Card>

        {/* Dashboard Card 3 */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Courses Sold</h3>
          <p className="text-5xl font-extrabold bg-gradient-to-r from-purple-500 to-pink-500 text-transparent bg-clip-text">89</p>
          <p className={`text-sm mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>+20% from last month</p>
          {/* Placeholder for API call: Fetch courses sold from /api/courses/sales or /api/ecommerce/sales */}
        </Card>
      </div>

      {/* Quick Actions */}
      <Card theme={theme} className="mt-16">
        <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Quick Actions</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <Button variant="primary" icon={GraduationCap} theme={theme}>New Course</Button>
          <Button variant="primary" icon={ShoppingCart} theme={theme}>New Product</Button>
          <Button variant="primary" icon={Smartphone} theme={theme}>Manage Social</Button>
          <Button variant="primary" icon={BarChart} theme={theme}>View Analytics</Button>
        </div>
      </Card>

      {/* Recent Activity Feed */}
      <Card theme={theme} className="mt-16">
        <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Recent Activity</h3>
        <ul className="space-y-4">
          <li className="flex items-center space-x-3">
            <CheckCircle className="text-green-500" size={20} />
            <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>New course "Advanced React Hooks" published. <span className="text-sm text-gray-500">2 hours ago</span></p>
          </li>
          <li className="flex items-center space-x-3">
            <ShoppingCart className="text-blue-500" size={20} />
            <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>New sale: "E-book: Creator's Guide" to John Doe. <span className="text-sm text-gray-500">Yesterday</span></p>
          </li>
          <li className="flex items-center space-x-3">
            <Users className="text-purple-500" size={20} />
            <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>5 new subscribers joined your mailing list. <span className="text-sm text-gray-500">3 days ago</span></p>
          </li>
          <li className="flex items-center space-x-3">
            <BarChart className="text-orange-500" size={20} />
            <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Analytics report generated for Q2 2025. <span className="text-sm text-gray-500">1 week ago</span></p>
          </li>
          {/* Placeholder for API call: Fetch recent activities from /api/dashboard/activity or relevant module endpoints */}
        </ul>
      </Card>
    </div>
  );

  // Courses Page Component
  const CoursesPage = ({ theme }) => {
    const courses = [
      { id: 1, title: "Introduction to AI", category: "Development", progress: 75, price: 99, image: "https://placehold.co/300x180/007bff/ffffff?text=Course+Image+1" },
      { id: 2, title: "Advanced Web Dev", category: "Development", progress: 50, price: 149, image: "https://placehold.co/300x180/28a745/ffffff?text=Course+Image+2" },
      { id: 3, title: "Digital Marketing 101", category: "Marketing", progress: 90, price: 79, image: "https://placehold.co/300x180/ffc107/000000?text=Course+Image+3" },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={BookOpen}
          title="Your Courses"
          subtitle="Manage Your Courses"
          description="Create, edit, and publish your online courses."
          theme={theme}
        />

        {/* Create New Course Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Create New Course</h3>
          <form className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <InputGroup theme={theme} id="courseTitle" label="Course Title" placeholder="e.g., Master React Development" />
            <InputGroup
              theme={theme}
              id="courseCategory"
              label="Category"
              type="select"
              selectOptions={[
                { value: "", label: "Select Category" },
                { value: "development", label: "Development" },
                { value: "design", label: "Design" },
                { value: "marketing", label: "Marketing" },
                { value: "business", label: "Business" },
              ]}
            />
            <InputGroup theme={theme} id="courseDescription" label="Course Description" placeholder="Briefly describe your course content..." isTextArea rows={4} className="md:col-span-2" />
            <InputGroup theme={theme} id="coursePrice" label="Price ($)" type="number" placeholder="e.g., 99.00" className="md:col-span-1" />
            <InputGroup theme={theme} id="courseDuration" label="Duration (hours)" type="number" placeholder="e.g., 10" className="md:col-span-1" />
            <div className="md:col-span-2">
              <label htmlFor="courseImage" className={`block text-sm font-medium mb-2 ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Course Thumbnail Image</label>
              <div className={`flex items-center justify-center w-full h-32 border-2 border-dashed rounded-lg cursor-pointer ${theme === 'dark' ? 'border-gray-700 bg-gray-800 hover:border-gray-600' : 'border-gray-300 bg-gray-50 hover:border-gray-400'}`}>
                <div className="flex flex-col items-center justify-center pt-5 pb-6">
                  <UploadCloud className={`w-8 h-8 mb-3 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`} />
                  <p className={`mb-2 text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}><span className="font-semibold">Click to upload</span> or drag and drop</p>
                  <p className={`text-xs ${theme === 'dark' ? 'text-gray-500' : 'text-gray-600'}`}>SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
                </div>
                <input id="courseImage" type="file" className="hidden" />
              </div>
            </div>
            <div className="md:col-span-2 flex justify-end">
              <Button type="submit" variant="primary" theme={theme}>Publish Course</Button>
            </div>
            {/* Placeholder for API call: Submit new course data to /api/courses/ */}
          </form>
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Your Existing Courses</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {courses.map(course => (
            <Card key={course.id} theme={theme}>
              <img src={course.image} alt="Course Thumbnail" className="rounded-xl mb-4 w-full h-48 object-cover" />
              <h3 className={`text-2xl font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{course.title}</h3>
              <p className={`text-base mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Category: {course.category}</p>
              <div className="flex items-center justify-between mb-3">
                <span className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Progress:</span>
                <div className="w-2/3 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
                  <div className="bg-blue-600 h-2.5 rounded-full" style={{width: `${course.progress}%`}}></div>
                </div>
                <span className={`text-sm font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{course.progress}%</span>
              </div>
              <div className="flex justify-between items-center mt-4">
                <span className={`text-lg font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>${course.price}</span>
                <div className="flex space-x-2">
                  <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600" theme={theme}><Edit size={18} /></Button>
                  <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                </div>
              </div>
              {/* Placeholder for API call: Fetch course data from /api/courses/ */}
            </Card>
          ))}
        </div>
      </div>
    );
  };

  // Products Page Component
  const ProductsPage = ({ theme }) => {
    const products = [
      { id: 1, name: "E-book: Creator's Guide", stock: "In Stock", sales: 1234, price: 29, image: "https://placehold.co/300x180/dc3545/ffffff?text=Product+Image+1" },
      { id: 2, name: "Premium Preset Pack", stock: "In Stock", sales: 876, price: 49, image: "https://placehold.co/300x180/6f42c1/ffffff?text=Product+Image+2" },
      { id: 3, name: "Consultation Session", stock: "Limited (3)", sales: 25, price: 199, image: "https://placehold.co/300x180/17a2b8/ffffff?text=Product+Image+3" },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={Package}
          title="Your Products"
          subtitle="Manage Your Products"
          description="Add, update, and organize your digital and physical products."
          theme={theme}
        />

        {/* Add New Product Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Add New Product</h3>
          <form className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <InputGroup theme={theme} id="productName" label="Product Name" placeholder="e.g., Ultimate Photo Presets" />
            <InputGroup theme={theme} id="productPrice" label="Price ($)" type="number" placeholder="e.g., 49.99" />
            <InputGroup theme={theme} id="productDescription" label="Product Description" placeholder="Describe your product..." isTextArea rows={4} className="md:col-span-2" />
            <InputGroup theme={theme} id="productStock" label="Stock Quantity" type="number" placeholder="e.g., 100" />
            <InputGroup theme={theme} id="productSKU" label="SKU (Optional)" placeholder="e.g., UPP-2025" />
            <div className="md:col-span-2">
              <label htmlFor="productImage" className={`block text-sm font-medium mb-2 ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Product Image</label>
              <div className={`flex items-center justify-center w-full h-32 border-2 border-dashed rounded-lg cursor-pointer ${theme === 'dark' ? 'border-gray-700 bg-gray-800 hover:border-gray-600' : 'border-gray-300 bg-gray-50 hover:border-gray-400'}`}>
                <div className="flex flex-col items-center justify-center pt-5 pb-6">
                  <UploadCloud className={`w-8 h-8 mb-3 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`} />
                  <p className={`mb-2 text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}><span className="font-semibold">Click to upload</span> or drag and drop</p>
                  <p className={`text-xs ${theme === 'dark' ? 'text-gray-500' : 'text-gray-600'}`}>SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
                </div>
                <input id="productImage" type="file" className="hidden" />
              </div>
            </div>
            <div className="md:col-span-2 flex justify-end">
              <Button type="submit" variant="primary" theme={theme}>Add Product</Button>
            </div>
            {/* Placeholder for API call: Submit new product data to /api/ecommerce/products */}
          </form>
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Your Current Products</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {products.map(product => (
            <Card key={product.id} theme={theme}>
              <img src={product.image} alt="Product Thumbnail" className="rounded-xl mb-4 w-full h-48 object-cover" />
              <h3 className={`text-2xl font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{product.name}</h3>
              <p className={`text-base mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Price: ${product.price}</p>
              <div className="flex justify-between items-center text-sm mb-3">
                <span className={`${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Stock: <span className={`font-semibold ${product.stock === "In Stock" ? 'text-green-500' : 'text-red-500'}`}>{product.stock}</span></span>
                <span className={`${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Sales: <span className="font-semibold">{product.sales}</span></span>
              </div>
              <div className="flex justify-between items-center mt-4">
                <span className={`text-lg font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>${product.price}</span>
                <div className="flex space-x-2">
                  <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600" theme={theme}><Edit size={18} /></Button>
                  <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                </div>
              </div>
              {/* Placeholder for API call: Fetch product data from /api/ecommerce/products */}
            </Card>
          ))}
        </div>
      </div>
    );
  };

  // Analytics Page Component
  const AnalyticsPage = ({ theme }) => (
    <div className="max-w-7xl mx-auto py-8 px-4">
      <SectionHeader
        icon={LineChart}
        title="Your Analytics"
        subtitle="Detailed Analytics"
        description="Track your performance with in-depth data and insights."
        theme={theme}
      />

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-16">
        {/* Website Traffic */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Website Traffic</h3>
          <p className={`text-sm mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Visits over the last 30 days. <span className="text-green-500">+12%</span></p>
          <div className="bg-gray-700 h-48 rounded-lg flex flex-col items-center justify-center text-gray-300 text-center p-4">
            <p className="font-semibold">Dynamic Line Chart Placeholder</p>
            <p className="text-sm mt-2">Showing daily unique visitors and page views.</p>
            <p className="text-xs mt-2">(Integration with charting libraries like Recharts or Nivo)</p>
          </div>
          <div className="grid grid-cols-2 gap-4 mt-4 text-center">
            <div>
              <p className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>15,432</p>
              <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Total Visits</p>
            </div>
            <div>
              <p className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>8,765</p>
              <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Unique Visitors</p>
            </div>
          </div>
          {/* Placeholder for API call: Fetch traffic data from /api/analytics/traffic or /api/analytics-system/traffic */}
        </Card>

        {/* Sales Performance */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Sales Performance</h3>
          <p className={`text-sm mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Revenue breakdown by product category. <span className="text-green-500">+18%</span></p>
          <div className="bg-gray-700 h-48 rounded-lg flex flex-col items-center justify-center text-gray-300 text-center p-4">
            <p className="font-semibold">Dynamic Bar/Pie Chart Placeholder</p>
            <p className="text-sm mt-2">Illustrating sales by product category.</p>
            <p className="text-xs mt-2">(Integration with charting libraries like Recharts or Nivo)</p>
          </div>
          <div className="grid grid-cols-2 gap-4 mt-4 text-center">
            <div>
              <p className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>$5,678</p>
              <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Courses Revenue</p>
            </div>
            <div>
              <p className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>$6,667</p>
              <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Products Revenue</p>
            </div>
          </div>
          {/* Placeholder for API call: Fetch sales data from /api/financial/sales or /api/enhanced-ecommerce/sales */}
        </Card>

        {/* Audience Demographics */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Audience Demographics</h3>
          <p className={`text-sm mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Breakdown of your audience by age and location.</p>
          <div className="bg-gray-700 h-48 rounded-lg flex flex-col items-center justify-center text-gray-300 text-center p-4">
            <p className="font-semibold">Dynamic Demographics Chart Placeholder</p>
            <p className="text-sm mt-2">Showing audience age groups and top countries.</p>
            <p className="text-xs mt-2">(Integration with charting libraries like Recharts or Nivo)</p>
          </div>
          {/* Placeholder for API call: Fetch audience data from /api/crm/audience or /api/analytics/audience */}
        </Card>

        {/* Top Performing Content */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Top Performing Content</h3>
          <p className={`text-sm mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Your most viewed courses and products.</p>
          <ul className="space-y-2">
            <li className={`flex justify-between ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
              <span>Introduction to AI (Course)</span> <span className="font-semibold">345 views</span>
            </li>
            <li className={`flex justify-between ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
              <span>E-book: Creator's Guide (Product)</span> <span className="font-semibold">280 sales</span>
            </li>
            <li className={`flex justify-between ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
              <span>Advanced Web Dev (Course)</span> <span className="font-semibold">210 views</span>
            </li>
          </ul>
          {/* Placeholder for API call: Fetch top content from /api/analytics/content-performance or /api/blog/top-posts */}
        </Card>
      </div>
    </div>
  );

  // Workspaces Page Component
  const WorkspacesPage = ({ theme }) => {
    const workspaces = [
      { id: 1, name: "Creator Hub", type: "Personal", description: "Main workspace for content creation.", members: 1 },
      { id: 2, name: "Marketing Campaigns", type: "Business", description: "Dedicated to email and social media campaigns.", members: 3 },
      { id: 3, name: "Product Launch 2025", type: "Project", description: "Workspace for upcoming product launch.", members: 5 },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={Briefcase}
          title="Workspaces"
          subtitle="Manage Your Workspaces"
          description="Organize your projects and content into dedicated workspaces."
          theme={theme}
        />

        {/* Create New Workspace Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Create New Workspace</h3>
          <form className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <InputGroup theme={theme} id="workspaceName" label="Workspace Name" placeholder="e.g., My Personal Brand" />
            <InputGroup
              theme={theme}
              id="workspaceType"
              label="Workspace Type"
              type="select"
              selectOptions={[
                { value: "", label: "Select Type" },
                { value: "personal", label: "Personal" },
                { value: "business", label: "Business" },
                { value: "agency", label: "Agency" },
                { value: "project", label: "Project" },
              ]}
            />
            <InputGroup theme={theme} id="workspaceDescription" label="Description" placeholder="Briefly describe this workspace..." isTextArea rows={3} className="md:col-span-2" />
            <div className="md:col-span-2 flex justify-end">
              <Button type="submit" variant="primary" theme={theme}>Create Workspace</Button>
            </div>
            {/* Placeholder for API call: Create new workspace via /api/workspaces/ */}
          </form>
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Your Workspaces</h3>
        <div className="overflow-x-auto">
          <table className={`min-w-full rounded-lg overflow-hidden ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border border-gray-800' : 'bg-gray-100 backdrop-blur-lg border border-gray-200'}`}>
            <thead className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'}`}>
              <tr>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Name</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Type</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Description</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Members</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Actions</th>
              </tr>
            </thead>
            <tbody className={`divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-300'}`}>
              {workspaces.map(workspace => (
                <tr key={workspace.id} className={`${theme === 'dark' ? 'hover:bg-gray-850' : 'hover:bg-gray-150'}`}>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{workspace.name}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{workspace.type}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{workspace.description}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{workspace.members}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600 mr-2" theme={theme}><Edit size={18} /></Button>
                    <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                  </td>
                </tr>
              ))}
              {/* Placeholder for API call: Fetch workspaces from /api/workspaces/ */}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  // Blog & Content Management Page Component
  const BlogContentPage = ({ theme }) => {
    const posts = [
      { id: 1, title: "The Future of Creator Economy", category: "Industry Trends", status: "Published", date: "2025-07-15", views: 1500 },
      { id: 2, title: "How to Master Video Editing", category: "Tutorials", status: "Draft", date: "N/A", views: 50 },
      { id: 3, title: "Top 5 Marketing Strategies for 2025", category: "Marketing", status: "Published", date: "2025-07-01", views: 2300 },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={BookOpen}
          title="Blog & Content"
          subtitle="Manage Your Content"
          description="Create, publish, and manage your blog posts and articles."
          theme={theme}
        />

        {/* Create New Post Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Create New Post</h3>
          <form className="grid grid-cols-1 gap-6">
            <InputGroup theme={theme} id="postTitle" label="Post Title" placeholder="e.g., 10 Tips for Growing Your Audience" />
            <InputGroup
              theme={theme}
              id="postCategory"
              label="Category"
              type="select"
              selectOptions={[
                { value: "", label: "Select Category" },
                { value: "marketing", label: "Marketing" },
                { value: "productivity", label: "Productivity" },
                { value: "tutorials", label: "Tutorials" },
                { value: "news", label: "News" },
              ]}
            />
            <InputGroup theme={theme} id="postContent" label="Content" placeholder="Write your blog post content here..." isTextArea rows={8} />
            <InputGroup theme={theme} id="postTags" label="Tags (comma-separated)" placeholder="e.g., marketing, social media, tips" />
            <div className="flex items-center justify-between">
              <label htmlFor="publishNow" className={`text-base font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Publish Immediately</label>
              <input type="checkbox" id="publishNow" className="toggle toggle-primary" defaultChecked />
            </div>
            <div className="flex justify-end">
              <Button type="submit" variant="primary" theme={theme}>Publish Post</Button>
            </div>
            {/* Placeholder for API call: Create new blog post via /api/blog/posts */}
          </form>
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Your Blog Posts</h3>
        <div className="overflow-x-auto">
          <table className={`min-w-full rounded-lg overflow-hidden ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border border-gray-800' : 'bg-gray-100 backdrop-blur-lg border border-gray-200'}`}>
            <thead className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'}`}>
              <tr>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Title</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Category</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Status</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Published Date</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Views</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Actions</th>
              </tr>
            </thead>
            <tbody className={`divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-300'}`}>
              {posts.map(post => (
                <tr key={post.id} className={`${theme === 'dark' ? 'hover:bg-gray-850' : 'hover:bg-gray-150'}`}>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{post.title}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{post.category}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${post.status === 'Published' ? (theme === 'dark' ? 'text-green-500' : 'text-green-700') : (theme === 'dark' ? 'text-yellow-500' : 'text-yellow-700')}`}>{post.status}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{post.date}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{post.views}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600 mr-2" theme={theme}><Edit size={18} /></Button>
                    <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                  </td>
                </tr>
              ))}
              {/* Placeholder for API call: Fetch blog posts from /api/blog/posts */}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  // AI Tools Page Component
  const AIToolsPage = ({ theme }) => (
    <div className="max-w-7xl mx-auto py-8 px-4">
      <SectionHeader
        icon={Bot}
        title="AI Tools"
        subtitle="AI-Powered Creation Suite"
        description="Leverage advanced AI to generate content, images, and optimize your workflow."
        theme={theme}
      />

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-16">
        {/* AI Content Generation */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>AI Content Generator</h3>
          <form className="space-y-4">
            <InputGroup theme={theme} id="contentPrompt" label="Prompt" placeholder="e.g., Write a blog post outline about sustainable living." isTextArea rows={3} />
            <InputGroup
              theme={theme}
              id="contentType"
              label="Content Type"
              type="select"
              selectOptions={[
                { value: "blog-outline", label: "Blog Post Outline" },
                { value: "social-post", label: "Social Media Post" },
                { value: "email-subject", label: "Email Subject Line" },
                { value: "product-description", label: "Product Description" },
              ]}
            />
            <Button type="submit" variant="primary" theme={theme}>Generate Content</Button>
          </form>
          <div className={`mt-6 p-4 rounded-lg border ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-gray-200 border-gray-300'}`}>
            <h4 className={`font-semibold mb-2 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Generated Output:</h4>
            <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
              {/* Placeholder for generated content */}
              [AI generated text will appear here based on your prompt.]
            </p>
          </div>
          {/* Placeholder for API call: Generate content via /api/ai-content/generate */}
        </Card>

        {/* AI Image Generation */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>AI Image Generator</h3>
          <form className="space-y-4">
            <InputGroup theme={theme} id="imagePrompt" label="Image Description" placeholder="e.g., A futuristic city at sunset, cyberpunk style." isTextArea rows={3} />
            <InputGroup
              theme={theme}
              id="imageStyle"
              label="Style"
              type="select"
              selectOptions={[
                { value: "realistic", label: "Realistic" },
                { value: "cartoon", label: "Cartoon" },
                { value: "abstract", label: "Abstract" },
              ]}
            />
            <Button type="submit" variant="primary" theme={theme}>Generate Image</Button>
          </form>
          <div className={`mt-6 p-4 rounded-lg border flex items-center justify-center h-48 ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-gray-200 border-gray-300'}`}>
            <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
              {/* Placeholder for generated image */}
              [AI generated image would appear here.]
            </p>
          </div>
          {/* Placeholder for API call: Generate image via /api/ai/image-generation or /api/advanced-ai/image */}
        </Card>
      </div>

      {/* AI Token Usage */}
      <Card theme={theme} className="mt-16">
        <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>AI Token Usage</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
          <div>
            <p className={`text-4xl font-extrabold bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text`}>1,234</p>
            <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Tokens Used This Month</p>
          </div>
          <div>
            <p className={`text-4xl font-extrabold bg-gradient-to-r from-green-500 to-teal-500 text-transparent bg-clip-text`}>5,000</p>
            <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Monthly Limit</p>
          </div>
          <div>
            <p className={`text-4xl font-extrabold bg-gradient-to-r from-purple-500 to-pink-500 text-transparent bg-clip-text`}>3,766</p>
            <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Remaining</p>
          </div>
        </div>
        <div className="mt-6 text-center">
          <Button variant="primary" theme={theme}>Purchase More Tokens</Button>
        </div>
        {/* Placeholder for API call: Fetch token usage from /api/tokens/usage */}
      </Card>
    </div>
  );

  // Bookings Page Component
  const BookingsPage = ({ theme }) => {
    const bookings = [
      { id: 1, client: "Alice Wonderland", service: "1-on-1 Consultation", date: "2025-07-25", time: "10:00 AM", status: "Confirmed" },
      { id: 2, client: "Bob The Builder", service: "Workshop Session", date: "2025-08-01", time: "02:00 PM", status: "Pending" },
      { id: 3, client: "Charlie Chaplin", service: "Coaching Call", date: "2025-08-05", time: "11:30 AM", status: "Confirmed" },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={CalendarCheck}
          title="Bookings"
          subtitle="Manage Your Bookings"
          description="View, add, and manage your appointments and consultation sessions."
          theme={theme}
        />

        {/* Add New Booking Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Add New Booking</h3>
          <form className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <InputGroup theme={theme} id="clientName" label="Client Name" placeholder="e.g., Alice Wonderland" />
            <InputGroup theme={theme} id="clientEmail" label="Client Email" type="email" placeholder="alice@example.com" />
            <InputGroup
              theme={theme}
              id="bookingService"
              label="Service"
              type="select"
              selectOptions={[
                { value: "", label: "Select Service" },
                { value: "consultation", label: "1-on-1 Consultation" },
                { value: "workshop", label: "Workshop Session" },
                { value: "coaching", label: "Coaching Call" },
              ]}
            />
            <InputGroup theme={theme} id="bookingDate" label="Date" type="date" />
            <InputGroup theme={theme} id="bookingTime" label="Time" type="time" />
            <InputGroup
              theme={theme}
              id="bookingStatus"
              label="Status"
              type="select"
              selectOptions={[
                { value: "pending", label: "Pending" },
                { value: "confirmed", label: "Confirmed" },
                { value: "cancelled", label: "Cancelled" },
                { value: "completed", label: "Completed" },
              ]}
            />
            <div className="md:col-span-2 flex justify-end">
              <Button type="submit" variant="primary" theme={theme}>Add Booking</Button>
            </div>
            {/* Placeholder for API call: Add new booking via /api/bookings/ */}
          </form>
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Upcoming Bookings</h3>
        <div className="overflow-x-auto">
          <table className={`min-w-full rounded-lg overflow-hidden ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border border-gray-800' : 'bg-gray-100 backdrop-blur-lg border border-gray-200'}`}>
            <thead className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'}`}>
              <tr>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Client</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Service</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Date</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Time</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Status</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Actions</th>
              </tr>
            </thead>
            <tbody className={`divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-300'}`}>
              {bookings.map(booking => (
                <tr key={booking.id} className={`${theme === 'dark' ? 'hover:bg-gray-850' : 'hover:bg-gray-150'}`}>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{booking.client}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{booking.service}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{booking.date}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{booking.time}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${booking.status === 'Confirmed' ? (theme === 'dark' ? 'text-green-500' : 'text-green-700') : (theme === 'dark' ? 'text-yellow-500' : 'text-yellow-700')}`}>{booking.status}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600 mr-2" theme={theme}><Edit size={18} /></Button>
                    <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                  </td>
                </tr>
              ))}
              {/* Placeholder for API call: Fetch bookings from /api/bookings/ */}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  // Marketing & Promotions Page Component
  const MarketingPromotionsPage = ({ theme }) => {
    const campaigns = [
      { id: 1, name: "Welcome Series", type: "Email Campaign", value: "N/A", status: "Active", expiry: "Ongoing" },
      { id: 2, name: "SAVE15", type: "Coupon", value: "15% Off", status: "Active", expiry: "2025-08-31" },
      { id: 3, name: "Holiday Discount", type: "Coupon", value: "$25 Off", status: "Inactive", expiry: "2024-12-31" },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={Megaphone}
          title="Marketing & Promotions"
          subtitle="Boost Your Reach & Sales"
          description="Manage email campaigns, promotions, and referral programs."
          theme={theme}
        />

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-16">
          {/* Email Campaigns */}
          <Card theme={theme}>
            <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Email Campaigns</h3>
            <form className="space-y-4">
              <InputGroup theme={theme} id="campaignName" label="Campaign Name" placeholder="e.g., Summer Sale Newsletter" />
              <InputGroup theme={theme} id="campaignSubject" label="Subject Line" placeholder="Catchy subject for your email" />
              <InputGroup theme={theme} id="campaignContent" label="Email Content" placeholder="Design your email content..." isTextArea rows={5} />
              <div className="flex justify-end">
                <Button type="submit" variant="primary" theme={theme}>Schedule Campaign</Button>
              </div>
              {/* Placeholder for API call: Create email campaign via /api/email-marketing/campaigns */}
            </form>
          </Card>

          {/* Promotions & Coupons */}
          <Card theme={theme}>
            <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Promotions & Coupons</h3>
            <form className="space-y-4">
              <InputGroup theme={theme} id="couponCode" label="Coupon Code" placeholder="e.g., SUMMER20" />
              <InputGroup
                theme={theme}
                id="discountType"
                label="Discount Type"
                type="select"
                selectOptions={[
                  { value: "percentage", label: "Percentage (%)" },
                  { value: "fixed", label: "Fixed Amount ($)" },
                ]}
              />
              <InputGroup theme={theme} id="discountValue" label="Discount Value" type="number" placeholder="e.g., 20 (for 20% or $20)" />
              <InputGroup theme={theme} id="expiryDate" label="Expiry Date" type="date" />
              <div className="flex justify-end">
                <Button type="submit" variant="success" theme={theme}>Create Coupon</Button>
              </div>
              {/* Placeholder for API call: Create promotions/coupons via /api/promotions/coupons */}
            </form>
          </Card>
        </div>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Active Campaigns & Promotions</h3>
        <div className="overflow-x-auto">
          <table className={`min-w-full rounded-lg overflow-hidden ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border border-gray-800' : 'bg-gray-100 backdrop-blur-lg border border-gray-200'}`}>
            <thead className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'}`}>
              <tr>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Name/Code</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Type</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Value</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Status</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Expiry/End</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Actions</th>
              </tr>
            </thead>
            <tbody className={`divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-300'}`}>
              {campaigns.map(campaign => (
                <tr key={campaign.id} className={`${theme === 'dark' ? 'hover:bg-gray-850' : 'hover:bg-gray-150'}`}>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{campaign.name}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{campaign.type}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{campaign.value}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${campaign.status === 'Active' ? (theme === 'dark' ? 'text-green-500' : 'text-green-700') : (theme === 'dark' ? 'text-red-500' : 'text-red-700')}`}>{campaign.status}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{campaign.expiry}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600 mr-2" theme={theme}><Edit size={18} /></Button>
                    <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                  </td>
                </tr>
              ))}
              {/* Placeholder for API call: Fetch active campaigns/promotions from /api/marketing/campaigns or /api/promotions/ */}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  // Team Management Page Component
  const TeamManagementPage = ({ theme }) => {
    const teamMembers = [
      { id: 1, name: "Jane Doe", email: "jane.doe@example.com", role: "Admin" },
      { id: 2, name: "Mark Johnson", email: "mark.j@example.com", role: "Editor" },
      { id: 3, name: "Sarah Lee", email: "sarah.l@example.com", role: "Viewer" },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={Users}
          title="Team Management"
          subtitle="Manage Your Team"
          description="Add, remove, and manage roles for your team members."
          theme={theme}
        />

        {/* Add New Team Member Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Add New Team Member</h3>
          <form className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <InputGroup theme={theme} id="memberName" label="Full Name" placeholder="e.g., John Doe" />
            <InputGroup theme={theme} id="memberEmail" label="Email Address" type="email" placeholder="john.doe@example.com" />
            <InputGroup
              theme={theme}
              id="memberRole"
              label="Role"
              type="select"
              selectOptions={[
                { value: "", label: "Select Role" },
                { value: "admin", label: "Admin" },
                { value: "editor", label: "Editor" },
                { value: "viewer", label: "Viewer" },
              ]}
              className="md:col-span-2"
            />
            <div className="md:col-span-2 flex justify-end">
              <Button type="submit" variant="primary" theme={theme}>Add Member</Button>
            </div>
            {/* Placeholder for API call: Submit new team member to /api/team/members */}
          </form>
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Current Team Members</h3>
        <div className="overflow-x-auto">
          <table className={`min-w-full rounded-lg overflow-hidden ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border border-gray-800' : 'bg-gray-100 backdrop-blur-lg border border-gray-200'}`}>
            <thead className={`${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-200'}`}>
              <tr>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Name</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Email</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Role</th>
                <th className={`px-6 py-3 text-left text-xs font-medium uppercase tracking-wider ${theme === 'dark' ? 'text-gray-400' : 'text-gray-700'}`}>Actions</th>
              </tr>
            </thead>
            <tbody className={`divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-300'}`}>
              {teamMembers.map(member => (
                <tr key={member.id} className={`${theme === 'dark' ? 'hover:bg-gray-850' : 'hover:bg-gray-150'}`}>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{member.name}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{member.email}</td>
                  <td className={`px-6 py-4 whitespace-nowrap ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{member.role}</td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <Button variant="icon" className="p-2 bg-blue-500 hover:bg-blue-600 mr-2" theme={theme}><Edit size={18} /></Button>
                    <Button variant="icon" className="p-2 bg-red-500 hover:bg-red-600" theme={theme}><Trash2 size={18} /></Button>
                  </td>
                </tr>
              ))}
              {/* Placeholder for API call: Fetch team members from /api/team/members */}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  // Media Library Page Component
  const MediaLibraryPage = ({ theme }) => {
    const mediaFiles = [
      { id: 1, name: "my_awesome_photo.jpg", type: "Image", size: "1.2 MB", url: "https://placehold.co/300x200/4CAF50/FFFFFF?text=Image+1" },
      { id: 2, name: "intro_video.mp4", type: "Video", size: "5.8 MB", url: "https://placehold.co/300x200/FFC107/000000?text=Video+Clip" },
      { id: 3, name: "report_2025.pdf", type: "Document", size: "2.1 MB", url: "https://placehold.co/300x200/007bff/ffffff?text=Document" },
      { id: 4, name: "brand_logo.png", type: "Image", size: "0.5 MB", url: "https://placehold.co/300x200/9C27B0/FFFFFF?text=Logo" },
    ];

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={Image}
          title="Media Library"
          subtitle="Manage Your Assets"
          description="Upload, organize, and use your images, videos, and documents."
          theme={theme}
        />

        {/* Upload Media Section */}
        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Upload New Media</h3>
          <div className={`flex items-center justify-center w-full h-48 border-2 border-dashed rounded-lg cursor-pointer ${theme === 'dark' ? 'border-gray-700 bg-gray-800 hover:border-gray-600' : 'border-gray-300 bg-gray-50 hover:border-gray-400'}`}>
            <div className="flex flex-col items-center justify-center pt-5 pb-6">
              <UploadCloud className={`w-10 h-10 mb-3 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`} />
              <p className={`mb-2 text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}><span className="font-semibold">Click to upload</span> or drag and drop</p>
              <p className={`text-xs ${theme === 'dark' ? 'text-gray-500' : 'text-gray-600'}`}>Max file size: 10MB (JPG, PNG, GIF, MP4, PDF)</p>
            </div>
            <input id="mediaUpload" type="file" className="hidden" multiple />
          </div>
          <div className="flex justify-end mt-6">
            <Button variant="primary" theme={theme}>Upload Files</Button>
          </div>
          {/* Placeholder for API call: Upload files to /api/media/upload */}
        </Card>

        <h3 className={`text-3xl font-bold mb-8 mt-16 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Your Media Files</h3>
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {mediaFiles.map(file => (
            <div key={file.id} className={`relative group rounded-lg overflow-hidden border ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border-gray-800' : 'bg-gray-100 backdrop-blur-lg border-gray-200'}`}>
              <img src={file.url} alt="Media File" className="w-full h-40 object-cover" />
              <div className="p-4">
                <p className={`font-medium truncate ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{file.name}</p>
                <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{file.type} | {file.size}</p>
              </div>
              <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                <Button variant="icon" className="p-2 bg-blue-500 text-white mx-1 hover:bg-blue-600" theme={theme}><Search size={20} /></Button>
                <Button variant="icon" className="p-2 bg-red-500 text-white mx-1 hover:bg-red-600" theme={theme}><Trash2 size={20} /></Button>
              </div>
            </div>
          ))}
          {/* Placeholder for API call: Fetch media files from /api/media/files */}
        </div>
      </div>
    );
  };

  // Notifications Page Component
  const NotificationsPage = ({ theme }) => {
    const notifications = [
      { id: 1, type: "success", icon: CheckCircle, title: "Course Published Successfully!", message: "Your course 'Introduction to AI' is now live and available to students.", time: "2 hours ago" },
      { id: 2, type: "info", icon: ShoppingCart, title: "New Order Received!", message: "John Doe purchased 'E-book: Creator's Guide'. Order #MWZ789.", time: "Yesterday" },
      { id: 3, type: "info", icon: Users, title: "New Subscriber Alert!", message: "You have 5 new subscribers to your email list.", time: "3 days ago" },
      { id: 4, type: "warning", icon: BellRing, title: "Storage Limit Reached", message: "You are nearing your storage limit. Please upgrade your plan.", time: "1 week ago" },
    ];

    const getIconColor = (type) => {
      switch (type) {
        case 'success': return 'text-green-500';
        case 'info': return 'text-blue-500';
        case 'warning': return 'text-yellow-500';
        case 'error': return 'text-red-500';
        default: return 'text-gray-500';
      }
    };

    return (
      <div className="max-w-7xl mx-auto py-8 px-4">
        <SectionHeader
          icon={BellRing}
          title="Notifications"
          subtitle="Your Notifications"
          description="Stay updated on all activities and important alerts."
          theme={theme}
        />

        <Card theme={theme} className="mt-16">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Recent Notifications</h3>
          <ul className="space-y-4">
            {notifications.map(notification => (
              <li key={notification.id} className={`flex items-start p-4 rounded-lg ${theme === 'dark' ? 'bg-gray-800 hover:bg-gray-700' : 'bg-gray-100 hover:bg-gray-200'}`}>
                <notification.icon className={`${getIconColor(notification.type)} mr-3 mt-1 flex-shrink-0`} size={20} />
                <div>
                  <p className={`font-semibold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{notification.title}</p>
                  <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{notification.message} <span className="block text-xs text-gray-500 mt-1">{notification.time}</span></p>
                </div>
                <button className={`ml-auto p-1 rounded-full ${theme === 'dark' ? 'text-gray-400 hover:text-white hover:bg-gray-600' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-300'}`}><XCircle size={18} /></button>
              </li>
            ))}
            {/* Placeholder for API call: Fetch notifications from /api/notifications/ */}
          </ul>
          <div className="text-center mt-8">
            <Button variant="primary" theme={theme}>Load More Notifications</Button>
          </div>
        </Card>
      </div>
    );
  };

  // Settings Page Component
  const SettingsPage = ({ theme }) => (
    <div className="max-w-7xl mx-auto py-8 px-4">
      <SectionHeader
        icon={Settings}
        title="Account Settings"
        subtitle="Manage Your Preferences"
        description="Update your profile, notification settings, and integrations."
        theme={theme}
      />

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-16">
        {/* Profile Settings */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Profile Information</h3>
          <form className="space-y-4">
            <InputGroup theme={theme} id="fullName" label="Full Name" defaultValue="Jane Doe" />
            <InputGroup theme={theme} id="email" label="Email Address" type="email" defaultValue="jane.doe@example.com" />
            <InputGroup theme={theme} id="username" label="Username" defaultValue="janedoecreator" />
            <InputGroup theme={theme} id="phone" label="Phone Number" type="tel" defaultValue="+1 (555) 123-4567" />
            <InputGroup
              theme={theme}
              id="timezone"
              label="Timezone"
              type="select"
              selectOptions={[
                { value: "UTC-5", label: "America/New_York (UTC-05:00)" },
                { value: "UTC+1", label: "Europe/London (UTC+01:00)" },
                { value: "UTC+7", label: "Asia/Bangkok (UTC+07:00)" },
              ]}
              defaultValue="UTC+7"
            />
            <Button type="submit" variant="primary" theme={theme}>Update Profile</Button>
            {/* Placeholder for API call: Update user profile to /api/users/{user_id} */}
          </form>
        </Card>

        {/* Notification Settings */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Notification Preferences</h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <label htmlFor="emailNotifications" className={`text-base font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Email Notifications</label>
              <input type="checkbox" id="emailNotifications" className="toggle toggle-primary" defaultChecked />
            </div>
            <div className="flex items-center justify-between">
              <label htmlFor="pushNotifications" className={`text-base font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Push Notifications</label>
              <input type="checkbox" id="pushNotifications" className="toggle toggle-primary" />
            </div>
            <div className="flex items-center justify-between">
              <label htmlFor="smsNotifications" className={`text-base font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>SMS Notifications</label>
              <input type="checkbox" id="smsNotifications" className="toggle toggle-primary" defaultChecked />
            </div>
            <div className="flex items-center justify-between">
              <label htmlFor="productUpdates" className={`text-base font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Product Updates</label>
              <input type="checkbox" id="productUpdates" className="toggle toggle-primary" defaultChecked />
            </div>
            <div className="flex items-center justify-between">
              <label htmlFor="marketingEmails" className={`text-base font-medium ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>Marketing Emails</label>
              <input type="checkbox" id="marketingEmails" className="toggle toggle-primary" />
            </div>
          </div>
          <Button type="submit" variant="primary" className="mt-6" theme={theme}>Save Preferences</Button>
            {/* Placeholder for API call: Update notification preferences to /api/notifications/preferences */}
        </Card>

        {/* Integrations */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Integrations</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className={`p-4 rounded-lg border flex items-center justify-between ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <span className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Stripe</span>
              <Button className="px-4 py-2 text-sm" variant="success" theme={theme}>Connected</Button>
            </div>
            <div className={`p-4 rounded-lg border flex items-center justify-between ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <span className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Mailchimp</span>
              <Button className="px-4 py-2 text-sm" variant="primary" theme={theme}>Connect</Button>
            </div>
            <div className={`p-4 rounded-lg border flex items-center justify-between ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <span className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Zapier</span>
              <Button className="px-4 py-2 text-sm" variant="primary" theme={theme}>Connect</Button>
            </div>
            <div className={`p-4 rounded-lg border flex items-center justify-between ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <span className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Google Analytics</span>
              <Button className="px-4 py-2 text-sm" variant="primary" theme={theme}>Connect</Button>
            </div>
            <div className={`p-4 rounded-lg border flex items-center justify-between ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <span className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Facebook Ads</span>
              <Button className="px-4 py-2 text-sm" variant="primary" theme={theme}>Connect</Button>
            </div>
          </div>
          {/* Placeholder for API call: Manage integrations via /api/integrations/ */}
        </Card>

        {/* API Keys (relevant to ai_token_management) */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>API Keys</h3>
          <p className={`mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Manage your API keys for external services and AI integrations.</p>
          <div className="space-y-4">
            <div className={`p-4 rounded-lg border ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <p className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>AI Content Generation Key</p>
              <div className="flex items-center mt-2">
                <input type="text" readOnly value="********************abcde12345" className={`flex-grow p-2 rounded-lg border ${theme === 'dark' ? 'bg-gray-700 border-gray-600 text-gray-300' : 'bg-gray-100 border-gray-300 text-gray-700'}`} />
                <Button className="ml-3 px-4 py-2 text-sm" variant="primary" theme={theme}>Regenerate</Button>
              </div>
            </div>
            <div className={`p-4 rounded-lg border ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <p className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Public API Key</p>
              <div className="flex items-center mt-2">
                <input type="text" readOnly value="********************fghij67890" className={`flex-grow p-2 rounded-lg border ${theme === 'dark' ? 'bg-gray-700 border-gray-600 text-gray-300' : 'bg-gray-100 border-gray-300 text-gray-700'}`} />
                <Button className="ml-3 px-4 py-2 text-sm" variant="primary" theme={theme}>Regenerate</Button>
              </div>
            </div>
          </div>
          {/* Placeholder for API call: Manage API tokens via /api/tokens/ */}
        </Card>

        {/* Subscription & Billing (relevant to subscription_management, financial_management) */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Subscription & Billing</h3>
          <p className={`mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Manage your subscription plan and billing details.</p>
          <div className="space-y-4">
            <div className={`p-4 rounded-lg border ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <p className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Current Plan: <span className="font-bold text-blue-500">Professional</span></p>
              <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Renews on: July 20, 2026</p>
              <Button className="mt-3 px-4 py-2 text-sm" variant="primary" theme={theme}>Change Plan</Button>
            </div>
            <div className={`p-4 rounded-lg border ${theme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-300'}`}>
              <p className={`font-medium ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Payment Method: **** **** **** 1234</p>
              <Button className="mt-3 px-4 py-2 text-sm" variant="primary" theme={theme}>Update Payment</Button>
            </div>
          </div>
          {/* Placeholder for API call: Fetch subscription details from /api/subscriptions/current or /api/financial/billing */}
        </Card>
      </div>
    </div>
  );

  // Help & Support Page Component
  const HelpAndSupportPage = ({ theme }) => (
    <div className="max-w-7xl mx-auto py-8 px-4">
      <SectionHeader
        icon={HelpCircle}
        title="Help & Support"
        subtitle="How Can We Help You?"
        description="Find answers to common questions or contact our support team."
        theme={theme}
      />

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-16">
        {/* FAQ Section */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Frequently Asked Questions</h3>
          <div className="space-y-4">
            <details className="group">
              <summary className={`flex justify-between items-center font-semibold cursor-pointer ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                How do I create a new course?
                <span className="transform transition-transform duration-200 group-open:rotate-180">▼</span>
              </summary>
              <p className={`mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Navigate to the "Courses" section in your sidebar, then click on "Create New Course" and fill in the details.</p>
            </details>
            <details className="group">
              <summary className={`flex justify-between items-center font-semibold cursor-pointer ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                Can I integrate with other platforms?
                <span className="transform transition-transform duration-200 group-open:rotate-180">▼</span>
              </summary>
              <p className={`mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Yes, Mewayz supports integrations with popular tools like Stripe, Mailchimp, and Zapier. Find more in "Settings" under "Integrations".</p>
            </details>
            <details className="group">
              <summary className={`flex justify-between items-center font-semibold cursor-pointer ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                Where can I view my sales analytics?
                <span className="transform transition-transform duration-200 group-open:rotate-180">▼</span>
              </summary>
              <p className={`mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Your detailed sales and traffic analytics are available in the "Analytics" section of your dashboard.</p>
            </details>
            <details className="group">
              <summary className={`flex justify-between items-center font-semibold cursor-pointer ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                Is my data secure on Mewayz?
                <span className="transform transition-transform duration-200 group-open:rotate-180">▼</span>
              </summary>
              <p className={`mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Absolutely. We employ industry-standard security measures, including encryption and regular audits, to protect your data. Refer to our Privacy Policy for more details.</p>
            </details>
            <details className="group">
              <summary className={`flex justify-between items-center font-semibold cursor-pointer ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                How do I update my billing information?
                <span className="transform transition-transform duration-200 group-open:rotate-180">▼</span>
              </summary>
              <p className={`mt-2 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>You can update your billing information in the "Settings" section under "Billing & Subscriptions".</p>
            </details>
          </div>
          {/* Placeholder for API call: Fetch FAQs from /api/support/faqs */}
        </Card>

        {/* Contact Support */}
        <Card theme={theme}>
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Contact Support</h3>
          <p className={`mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Can't find what you're looking for? Reach out to our support team.</p>
          <form className="space-y-4">
            <InputGroup theme={theme} id="supportEmail" label="Your Email" type="email" placeholder="your.email@example.com" />
            <InputGroup theme={theme} id="supportSubject" label="Subject" placeholder="Issue with my course..." />
            <InputGroup theme={theme} id="supportMessage" label="Message" placeholder="Describe your issue in detail..." isTextArea rows={4} />
            <Button type="submit" variant="primary" theme={theme}>Send Message</Button>
            {/* Placeholder for API call: Submit support ticket to /api/support/tickets */}
          </form>
        </Card>

        {/* Documentation Link */}
        <Card theme={theme} className="lg:col-span-2">
          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Documentation & Guides</h3>
          <p className={`mb-4 ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>Explore our extensive documentation for detailed guides and tutorials.</p>
          <Button variant="primary" icon={FileText} theme={theme}>View Documentation</Button>
          {/* Placeholder for API call: Link to external documentation or /api/blog/category/tutorials */}
        </Card>
      </div>
    </div>
  );

  // Dashboard Layout Component
  const DashboardLayout = ({ theme, toggleTheme, handleLogout, isSidebarCollapsed, toggleSidebar }) => {
    const [activeView, setActiveView] = useState('overview'); // State to manage active dashboard view

    const renderContent = () => {
      switch (activeView) {
        case 'overview':
          return <DashboardOverview theme={theme} />;
        case 'courses':
          return <CoursesPage theme={theme} />;
        case 'products':
          return <ProductsPage theme={theme} />;
        case 'analytics':
          return <AnalyticsPage theme={theme} />;
        case 'workspaces':
          return <WorkspacesPage theme={theme} />;
        case 'blog':
          return <BlogContentPage theme={theme} />;
        case 'ai-tools':
          return <AIToolsPage theme={theme} />;
        case 'bookings':
          return <BookingsPage theme={theme} />;
        case 'marketing':
          return <MarketingPromotionsPage theme={theme} />;
        case 'team':
          return <TeamManagementPage theme={theme} />;
        case 'media':
          return <MediaLibraryPage theme={theme} />;
        case 'notifications':
          return <NotificationsPage theme={theme} />;
        case 'settings':
          return <SettingsPage theme={theme} />;
        case 'help':
          return <HelpAndSupportPage theme={theme} />;
        default:
          return <DashboardOverview theme={theme} />;
      }
    };

    return (
      <div className={`flex min-h-screen pt-16 ${theme === 'dark' ? 'bg-black text-white' : 'bg-white text-gray-900'}`}>
        {/* Sidebar */}
        <aside className={`fixed top-16 left-0 h-[calc(100vh-4rem)] p-4 border-r ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border-gray-800' : 'bg-gray-50 backdrop-blur-lg border-gray-200'} transition-all duration-300 ease-in-out
          ${isSidebarCollapsed ? 'w-20 md:w-20' : 'w-64'}
          ${isSidebarCollapsed ? 'hidden md:block' : 'block'}
        `}>
          <nav className="space-y-2">
            <button
              onClick={toggleSidebar}
              className={`hidden md:flex items-center p-3 rounded-xl font-medium transition-colors duration-200 mb-4 w-full justify-center ${theme === 'dark' ? 'text-gray-300 hover:bg-gray-800' : 'text-gray-700 hover:bg-gray-200'}`}
            >
              {isSidebarCollapsed ? <Menu size={20} /> : <X size={20} />}
              {!isSidebarCollapsed && <span className="ml-3">Collapse</span>}
            </button>
            {/* Dashboard Links */}
            {[
              { id: 'overview', label: 'Overview', icon: LayoutDashboard },
              { id: 'courses', label: 'Courses', icon: BookOpen },
              { id: 'products', label: 'Products', icon: Package },
              { id: 'analytics', label: 'Analytics', icon: LineChart },
              { id: 'workspaces', label: 'Workspaces', icon: Briefcase },
              { id: 'blog', label: 'Blog & Content', icon: FileText },
              { id: 'ai-tools', label: 'AI Tools', icon: Bot },
              { id: 'bookings', label: 'Bookings', icon: CalendarCheck },
              { id: 'marketing', label: 'Marketing', icon: Megaphone },
              { id: 'team', label: 'Team', icon: Users },
              { id: 'media', label: 'Media Library', icon: Image },
              { id: 'notifications', label: 'Notifications', icon: BellRing },
            ].map(item => (
              <a
                key={item.id}
                href={`#dashboard-${item.id}`}
                onClick={() => setActiveView(item.id)}
                className={`flex items-center p-3 rounded-xl font-medium transition-colors duration-200 ${
                  activeView === item.id ? 'bg-blue-600 text-white shadow-md' : `${theme === 'dark' ? 'text-gray-300 hover:bg-gray-800' : 'text-gray-700 hover:bg-gray-200'}`
                } ${isSidebarCollapsed ? 'justify-center' : ''}`}
              >
                <item.icon className={`${isSidebarCollapsed ? '' : 'mr-3'}`} size={20} />
                {!isSidebarCollapsed && item.label}
              </a>
            ))}
            <div className="border-t border-gray-700 my-4"></div> {/* Separator */}
            {[
              { id: 'settings', label: 'Settings', icon: Settings },
              { id: 'help', label: 'Help & Support', icon: HelpCircle },
            ].map(item => (
              <a
                key={item.id}
                href={`#dashboard-${item.id}`}
                onClick={() => setActiveView(item.id)}
                className={`flex items-center p-3 rounded-xl font-medium transition-colors duration-200 ${
                  activeView === item.id ? 'bg-blue-600 text-white shadow-md' : `${theme === 'dark' ? 'text-gray-300 hover:bg-gray-800' : 'text-gray-700 hover:bg-gray-200'}`
                } ${isSidebarCollapsed ? 'justify-center' : ''}`}
              >
                <item.icon className={`${isSidebarCollapsed ? '' : 'mr-3'}`} size={20} />
                {!isSidebarCollapsed && item.label}
              </a>
            ))}
          </nav>
        </aside>

        {/* Main Content Area */}
        <main className={`flex-1 p-8 transition-all duration-300 ease-in-out ${isSidebarCollapsed ? 'ml-20' : 'ml-64'}`}>
          {renderContent()}
        </main>
      </div>
    );
  };

  // Component for the Hero section
  const HeroSection = () => (
    <section className={`relative pt-40 pb-24 text-center max-w-7xl mx-auto px-4 overflow-hidden ${theme === 'dark' ? 'bg-black' : 'bg-white'}`}>
      {/* Background glow */}
      <div className="absolute top-1/5 left-1/2 -translate-x-1/2 w-[600px] h-[400px] bg-gradient-radial from-blue-500/10 to-transparent rounded-full animate-pulseGlow opacity-60 -z-10"></div>

      <div className={`inline-flex items-center space-x-2 backdrop-blur-md border px-4 py-2 rounded-full text-sm font-semibold uppercase tracking-wider mb-8 animate-fade-in-up transition-all duration-300 hover:-translate-y-0.5 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-white' : 'bg-gray-100 border-gray-200 text-gray-900'}`}>
        <span className="text-xl">✨</span> <span>New: AI-Powered Creator Tools</span>
      </div>
      <h2 className={`text-6xl font-extrabold leading-tight tracking-tighter mb-2 animate-fade-in-up-delay-200 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
        Complete Creator
      </h2>
      <h2 className="text-6xl font-extrabold leading-tight tracking-tighter bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text mb-12 animate-fade-in-up-delay-400">
        Economy Platform
      </h2>
      <p className="text-xl text-gray-400 mb-12 max-w-2xl mx-auto leading-relaxed animate-fade-in-up-delay-600">
        Everything you need to build, manage, and scale your creator business. From social media management to e-commerce, courses, and beyond.
      </p>
      <div className="flex justify-center space-x-6 flex-wrap animate-fade-in-up-delay-800">
        <Button href="#trial" variant="primary" theme={theme}>Start Free Trial</Button>
        <Button href="#learn" variant="secondary" theme={theme}>Learn More</Button>
      </div>
      <div className="flex justify-center space-x-12 flex-wrap mt-16 animate-fade-in-up-delay-1000">
        <div className="text-center">
          <span className="block text-4xl font-extrabold bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text">10K+</span>
          <span className="block text-sm text-gray-500 uppercase tracking-wider font-medium">Active Creators</span>
        </div>
        <div className="text-center">
          <span className="block text-4xl font-extrabold bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text">$2M+</span>
          <span className="block text-sm text-gray-500 uppercase tracking-wider font-medium">Revenue Generated</span>
        </div>
        <div className="text-center">
          <span className="block text-4xl font-extrabold bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text">99.9%</span>
          <span className="block text-sm text-gray-500 uppercase tracking-wider font-medium">Uptime</span>
        </div>
      </div>
    </section>
  );

  // Component for the Features section
  const FeaturesSection = () => {
    const featureCardsRef = useRef([]);

    // Intersection Observer for scroll animations on feature cards
    useEffect(() => {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('opacity-100', 'translate-y-0');
          }
        });
      }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });

      featureCardsRef.current.forEach(card => {
        if (card) observer.observe(card);
      });

      return () => {
        featureCardsRef.current.forEach(card => {
          if (card) observer.unobserve(card);
        });
      };
    }, []);

    const featuresData = [
      { icon: <Smartphone className="w-7 h-7" />, title: "Social Media Management", description: "Manage all your social media accounts from one powerful dashboard with advanced scheduling and analytics, saving hours every week." },
      { icon: <ShoppingCart className="w-7 h-7" />, title: "E-commerce Platform", description: "Launch your online store effortlessly with integrated payment processing, inventory tracking, and customizable product pages." },
      { icon: <GraduationCap className="w-7 h-7" />, title: "Course Creation & Hosting", description: "Design, host, and sell engaging online courses with interactive lessons, quizzes, and student progress tracking." },
      { icon: <Users className="w-7 h-7" />, title: "Integrated CRM System", description: "Keep track of your audience, manage leads, and segment your customers with our intuitive customer relationship management tools." },
      { icon: <Globe className="w-7 h-7" />, title: "Custom Bio Sites & Websites", description: "Build stunning, mobile-responsive bio links and full-fledged websites with our drag-and-drop builder and custom domain support." },
      { icon: <Brain className="w-7 h-7" />, title: "AI-Powered Content & Marketing", description: "Generate engaging content, optimize marketing campaigns, and predict trends with our advanced AI tools, saving time and boosting ROI." },
      { icon: <Mail className="w-7 h-7" />, title: "Email Marketing Automation", description: "Automate your email campaigns, build subscriber lists, and track performance with powerful segmentation and analytics." },
      { icon: <BarChart className="w-7 h-7" />, title: "Advanced Analytics & Reporting", description: "Gain deep insights into your audience, content performance, and revenue with customizable dashboards and detailed reports." },
    ];

    return (
      <section id="features" className={`relative py-24 px-4 max-w-7xl mx-auto ${theme === 'dark' ? 'bg-black' : 'bg-white'}`}>
        <div className="absolute top-0 left-0 right-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500"></div>
        <div className="text-center mb-16">
          <div className={`inline-flex items-center space-x-2 backdrop-blur-md border px-4 py-2 rounded-full text-sm font-semibold uppercase tracking-wider mb-4 transition-all duration-300 hover:-translate-y-0.5 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-white' : 'bg-gray-100 border-gray-200 text-gray-900'}`}>
            <span className="text-xl">🚀</span> <span>Features</span>
          </div>
          <h2 className="text-5xl font-extrabold mb-4 tracking-tight">Everything You Need in One Platform</h2>
          <p className="text-lg text-gray-400 max-w-2xl mx-auto">Powerful tools designed specifically for creators, entrepreneurs, and businesses looking to thrive in the digital economy.</p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-16">
          {featuresData.map((feature, index) => (
            <div
              key={index}
              ref={el => featureCardsRef.current[index] = el}
              className={`p-8 rounded-2xl border transition-all duration-600 ease-in-out transform opacity-0 translate-y-8 hover:-translate-y-2 hover:shadow-xl relative overflow-hidden group
                ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border-gray-800 hover:border-gray-700' : 'bg-gray-100 backdrop-blur-lg border-gray-200 hover:border-gray-300'}`}
            >
              <div className="absolute top-0 left-0 right-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-400"></div>
              <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center text-white text-3xl mb-6 transition-transform duration-300 group-hover:scale-105">
                {feature.icon}
              </div>
              <h3 className={`text-2xl font-bold mb-3 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{feature.title}</h3>
              <p className={`text-base ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{feature.description}</p>
            </div>
          ))}
        </div>
      </section>
    );
  };

  // Component for the Testimonials section
  const TestimonialsSection = () => {
    const testimonialCardsRef = useRef([]);

    // Intersection Observer for scroll animations on testimonial cards
    useEffect(() => {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('opacity-100', 'translate-y-0');
          }
        });
      }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });

      testimonialCardsRef.current.forEach(card => {
        if (card) observer.observe(card);
      });

      return () => {
        testimonialCardsRef.current.forEach(card => {
          if (card) observer.unobserve(card);
        });
      };
    }, []);

    const testimonialsData = [
      { text: "Mewayz transformed my online business. The all-in-one platform saved me so much time and allowed me to focus on creating amazing content. Highly recommend!", author: "Jane Doe", title: "Fashion Blogger", img: "https://placehold.co/50x50/673AB7/FFFFFF?text=JD" },
      { text: "I've tried many platforms, but Mewayz is by far the most comprehensive and user-friendly. My course sales have doubled since I switched!", author: "Alex Smith", title: "Online Educator", img: "https://placehold.co/50x50/2196F3/FFFFFF?text=AS" },
      { text: "The AI tools are a game-changer! From content generation to marketing automation, Mewayz helps me stay ahead without the extra workload.", author: "Maria Brown", title: "Digital Artist", img: "https://placehold.co/50x50/4CAF50/FFFFFF?text=MB" },
    ];

    return (
      <section id="testimonials" className={`relative py-24 px-4 ${theme === 'dark' ? 'bg-black' : 'bg-white'} text-center`}>
        <div className="absolute top-0 left-0 right-0 h-0.5 bg-gradient-to-r from-blue-500 to-cyan-500"></div>
        <div className="text-center mb-16">
          <div className={`inline-flex items-center space-x-2 backdrop-blur-md border px-4 py-2 rounded-full text-sm font-semibold uppercase tracking-wider mb-4 ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-white' : 'bg-gray-100 border-gray-200 text-gray-900'}`}>
            <span className="text-xl">💬</span> <span>Testimonials</span>
          </div>
          <h2 className="text-5xl font-extrabold mb-4 tracking-tight">What Our Creators Say</h2>
          <p className="text-lg text-gray-400 max-w-2xl mx-auto">Hear directly from the creators who are thriving with Mewayz.</p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-5xl mx-auto mt-16">
          {testimonialsData.map((testimonial, index) => (
            <div
              key={index}
              ref={el => testimonialCardsRef.current[index] = el}
              className={`p-8 rounded-2xl border text-left flex flex-col justify-between transition-all duration-600 ease-in-out transform opacity-0 translate-y-8 hover:-translate-y-2 hover:shadow-xl ${theme === 'dark' ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border-gray-800 hover:border-gray-700' : 'bg-gray-100 backdrop-blur-lg border-gray-200 hover:border-gray-300'}`}
            >
              <p className={`text-lg mb-6 flex-grow ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>{testimonial.text}</p>
              <div className="flex items-center space-x-4 mt-auto">
                <img src={testimonial.img} alt={testimonial.author} className="w-12 h-12 rounded-full object-cover border-none" />
                <div>
                  <strong className={`block text-base ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{testimonial.author}</strong>
                  <span className={`block text-sm ${theme === 'dark' ? 'text-gray-500' : 'text-gray-600'}`}>{testimonial.title}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    );
  };

  // Component for the Call to Action section
  const CtaSection = () => (
    <section className={`${theme === 'dark' ? 'bg-black' : 'bg-white'} py-24 px-4 text-center shadow-xl`}>
      <h2 className={`text-5xl font-extrabold mb-6 leading-tight ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Ready to Elevate Your Creator Business?</h2>
      <p className={`text-xl mb-10 max-w-2xl mx-auto ${theme === 'dark' ? 'text-white' : 'text-gray-600'}`}>Join thousands of successful creators who are building, managing, and scaling their empires with Mewayz. Start your free trial today!</p>
      <Button href="#signup" variant="primary" theme={theme}>Get Started Now</Button>
    </section>
  );

  // Component for the Pricing section
  const PricingSection = () => {
    const pricingCardsRef = useRef([]);

    // Intersection Observer for scroll animations on pricing cards
    useEffect(() => {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('opacity-100', 'translate-y-0');
          }
        });
      }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });

      pricingCardsRef.current.forEach(card => {
        if (card) observer.observe(card);
      });

      return () => {
        pricingCardsRef.current.forEach(card => {
          if (card) observer.unobserve(card);
        });
      };
    }, []);

    const pricingData = [
      {
        name: "Starter",
        price: "$9",
        features: [
          "Up to 3 social media accounts",
          "Basic analytics & insights",
          "Email support",
          "1 bio site included",
          "Basic templates library",
          "Mobile app access",
        ],
        popular: false,
      },
      {
        name: "Professional",
        price: "$29",
        features: [
          "Unlimited social media accounts",
          "Advanced analytics & AI insights",
          "Priority support & live chat",
          "Unlimited bio sites & pages",
          "Premium templates & themes",
          "E-commerce features included",
          "Course creation tools",
          "Custom domain support",
        ],
        popular: true,
      },
      {
        name: "Enterprise",
        price: "$99",
        features: [
          "Everything in Professional",
          "Team collaboration tools",
          "Custom integrations & API",
          "White-label options",
          "Dedicated account manager",
          "Custom development",
          "Priority feature requests",
          "Advanced security features",
        ],
        popular: false,
      },
    ];

    return (
      <section id="pricing" className={`relative py-24 px-4 ${theme === 'dark' ? 'bg-black' : 'bg-white'}`}>
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <div className={`inline-flex items-center space-x-2 backdrop-blur-md border px-4 py-2 rounded-full text-sm font-semibold uppercase tracking-wider mb-4 ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-white' : 'bg-gray-100 border-gray-200 text-gray-900'}`}>
              <span className="text-xl">💰</span> <span>Pricing</span>
            </div>
            <h2 className="text-5xl font-extrabold mb-4 tracking-tight">Simple, Transparent Pricing</h2>
            <p className="text-lg text-gray-400">Choose the plan that's right for your business</p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-16">
            {pricingData.map((plan, index) => (
              <div
                key={index}
                ref={el => pricingCardsRef.current[index] = el}
                className={`relative p-0.5 rounded-2xl overflow-hidden transition-all duration-600 ease-in-out transform opacity-0 translate-y-8 hover:-translate-y-2 hover:shadow-xl
                  ${plan.popular ? 'scale-105 shadow-xl bg-gradient-to-r from-blue-500 to-cyan-500' : ''}
                `}
              >
                <div className={`relative h-full w-full p-8 rounded-2xl
                  ${theme === 'dark'
                    ? 'bg-gray-900 bg-opacity-80 backdrop-blur-lg border border-gray-800 hover:border-gray-700'
                    : 'bg-gray-100 backdrop-blur-lg border border-gray-200 hover:border-gray-300'}
                `}>
                  {plan.popular && (
                    // Adjusted padding and positioning for 'Most Popular' label to reduce height
                    <div className="absolute top-0 left-1/2 -translate-x-1/2 bg-gradient-to-r from-blue-500 to-cyan-500 text-white px-3 py-1 rounded-b-xl text-sm font-semibold uppercase tracking-wider shadow-md z-10 w-max whitespace-nowrap">
                      Most Popular
                    </div>
                  )}
                  <h3 className={`text-2xl font-bold mt-4 mb-2 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>{plan.name}</h3>
                  <div className="text-5xl font-extrabold bg-gradient-to-r from-blue-500 to-cyan-500 text-transparent bg-clip-text mb-6">
                    {plan.price}<span className={`text-base font-medium ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>/month</span>
                  </div>
                  <ul className="list-none my-8">
                    {plan.features.map((feature, idx) => (
                      <li key={idx} className={`flex items-center py-2 transition-colors duration-300 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>
                        <span className="text-green-500 mr-3 text-lg">✓</span> {feature}
                      </li>
                    ))}
                  </ul>
                  <Button href={`#${plan.name.toLowerCase()}`} variant="primary" className="block w-full text-center" theme={theme}>Get Started</Button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    );
  };

  // Component for the Footer section
  const Footer = () => (
    <footer id="contact" className={`${theme === 'dark' ? 'bg-black' : 'bg-white'} py-16 px-4 border-t ${theme === 'dark' ? 'border-gray-800' : 'border-gray-200'}`}>
      <div className="max-w-7xl mx-auto">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-8 mb-12">
          <div className="lg:col-span-2">
            <div className={`text-2xl font-bold tracking-tight mb-4 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Mewayz</div>
            <p className={`mb-6 text-base max-w-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-600'}`}>The complete creator economy platform for modern businesses. Empowering creators to build, grow, and monetize their digital presence.</p>
            <div className="flex space-x-4">
              <a href="#twitter" className={`w-11 h-11 backdrop-blur-md border rounded-xl flex items-center justify-center text-xl transition-all duration-300 hover:bg-purple-600 hover:text-white hover:-translate-y-1 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-gray-400' : 'bg-gray-100 border-gray-200 text-gray-600'}`}>𝕏</a>
              <a href="#instagram" className={`w-11 h-11 backdrop-blur-md border rounded-xl flex items-center justify-center text-xl transition-all duration-300 hover:bg-purple-600 hover:text-white hover:-translate-y-1 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-gray-400' : 'bg-gray-100 border-gray-200 text-gray-600'}`}>📷</a>
              <a href="#linkedin" className={`w-11 h-11 backdrop-blur-md border rounded-xl flex items-center justify-center text-xl transition-all duration-300 hover:bg-purple-600 hover:text-white hover:-translate-y-1 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-gray-400' : 'bg-gray-100 border-gray-200 text-gray-600'}`}>💼</a>
              <a href="#youtube" className={`w-11 h-11 backdrop-blur-md border rounded-xl flex items-center justify-center text-xl transition-all duration-300 hover:bg-purple-600 hover:text-white hover:-translate-y-1 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-gray-400' : 'bg-gray-100 border-gray-200 text-gray-600'}`}>📺</a>
              <a href="#facebook" className={`w-11 h-11 backdrop-blur-md border rounded-xl flex items-center justify-center text-xl transition-all duration-300 hover:bg-purple-600 hover:text-white hover:-translate-y-1 hover:shadow-md ${theme === 'dark' ? 'bg-gray-800 bg-opacity-30 border-gray-700 text-gray-400' : 'bg-gray-100 border-gray-200 text-gray-600'}`}>📘</a>
            </div>
          </div>

          <div>
            <h4 className={`font-bold mb-6 text-lg ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Product</h4>
            <ul className="space-y-3">
              <li><a href="#features" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Features Overview</a></li>
              <li><a href="#ecommerce" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>E-commerce</a></li>
              <li><a href="#courses" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Course Platform</a></li>
              <li><a href="#crm" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>CRM & Audience</a></li>
              <li><a href="#websites" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Websites & Bio Links</a></li>
              <li><a href="#ai-tools" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>AI Tools</a></li>
              <li><a href="#email-marketing" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Email Marketing</a></li>
              <li><a href="#analytics" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Analytics</a></li>
            </ul>
          </div>

          <div>
            <h4 className={`font-bold mb-6 text-lg ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Company</h4>
            <ul className="space-y-3">
              <li><a href="#about-us" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>About Us</a></li>
              <li><a href="#team" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Our Team</a></li>
              <li><a href="#careers" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Careers <span className="text-xs bg-green-500 text-white px-2 py-1 rounded-md ml-1">Hiring!</span></a></li>
              <li><a href="#partners" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Partnerships</a></li>
              <li><a href="#press" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Press & Media</a></li>
              <li><a href="#blog" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Blog</a></li>
            </ul>
          </div>

          <div>
            <h4 className={`font-bold mb-6 text-lg ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Resources</h4>
            <ul className="space-y-3">
              <li><a href="#help-center" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Help Center</a></li>
              <li><a href="#faqs" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>FAQs</a></li>
              <li><a href="#tutorials" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Video Tutorials</a></li>
              <li><a href="#community" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Community Forum</a></li>
              <li><a href="#webinars" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Webinars & Events</a></li>
              <li><a href="#api-docs" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>API Documentation</a></li>
              <li><a href="#status" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>System Status</a></li>
            </ul>
          </div>

          <div>
            <h4 className={`font-bold mb-6 text-lg ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>Legal & Support</h4>
            <ul className="space-y-3">
              <li><a href="#terms" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Terms of Service</a></li>
              <li><a href="#privacy" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Privacy Policy</a></li>
              <li><a href="#cookies" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Cookie Policy</a></li>
              <li><a href="#gdpr" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>GDPR Compliance</a></li>
              <li><a href="#security" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Security</a></li>
              <li><a href="mailto:support@mewayz.com" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Support Email</a></li>
              <li><a href="tel:+18001234567" className={`font-medium transition-all duration-300 hover:pl-3 ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-600 hover:text-gray-900'}`}>Call Us: +1 (800) 123-4567</a></li>
            </ul>
          </div>
        </div>

        <div className={`text-center pt-8 border-t ${theme === 'dark' ? 'border-gray-800' : 'border-gray-200'} ${theme === 'dark' ? 'text-gray-500' : 'text-gray-600'} font-medium`}>
          <p>© 2025 Mewayz. All rights reserved. Built with ❤️ for creators worldwide.</p>
        </div>
      </div>
    </footer>
  );

  return (
    // Main container for the React app, applying global styles
    <div className={`font-inter ${theme === 'dark' ? 'bg-black text-white' : 'bg-white text-gray-900'} min-h-screen transition-colors duration-400 ease-in-out`}>
      {/* Tailwind CSS CDN script for development */}
      <script src="https://cdn.tailwindcss.com"></script>
      {/* Custom styles that cannot be easily translated to Tailwind classes */}
      <style>
        {`
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');

        body {
          font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
          overflow-x: hidden;
        }

        /* Custom keyframes for animations */
        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(30px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        @keyframes pulseGlow {
            0% { transform: translateX(-50%) scale(0.98); opacity: 0.1; }
            50% { transform: translateX(-50%) scale(1.02); opacity: 0.2; }
            100% { transform: translateX(-50%) scale(0.98); opacity: 0.1; }
        }

        /* Tailwind animation classes */
        .animate-fade-in-up {
          animation: fadeInUp 0.8s ease forwards;
        }
        .animate-fade-in-up-delay-200 {
          animation: fadeInUp 0.8s ease 0.2s forwards;
        }
        .animate-fade-in-up-delay-400 {
          animation: fadeInUp 0.8s ease 0.4s forwards;
        }
        .animate-fade-in-up-delay-600 {
          animation: fadeInUp 0.8s ease 0.6s forwards;
        }
        .animate-fade-in-up-delay-800 {
          animation: fadeInUp 0.8s ease 0.8s forwards;
        }
        .animate-fade-in-up-delay-1000 {
          animation: fadeInUp 0.8s ease 1s forwards;
        }
        .animate-pulseGlow {
          animation: pulseGlow 4s infinite alternate;
        }

        /* Basic toggle switch styling for settings page */
        .toggle {
          appearance: none;
          width: 3.5rem;
          height: 1.75rem;
          border-radius: 9999px;
          background-color: #ccc;
          position: relative;
          cursor: pointer;
          transition: background-color 0.3s;
        }

        .toggle::before {
          content: '';
          position: absolute;
          width: 1.5rem;
          height: 1.5rem;
          border-radius: 9999px;
          background-color: white;
          top: 0.125rem;
          left: 0.125rem;
          transition: transform 0.3s;
        }

        .toggle:checked {
          background-color: #3B82F6; /* Blue-500 */
        }

        .toggle:checked::before {
          transform: translateX(1.75rem);
        }

        /* Dark mode specific toggle styling */
        [data-theme="dark"] .toggle {
          background-color: #4B5563; /* Gray-600 */
        }

        [data-theme="dark"] .toggle:checked {
          background-color: #60A5FA; /* Blue-400 */
        }
        `}
      </style>

      {/* Pass setActiveView to Header so it can navigate dashboard views */}
      <Header
        isLoggedIn={isLoggedIn}
        handleLogout={handleLogout}
        handleLogin={handleLogin}
        toggleTheme={toggleTheme}
        theme={theme}
        setActiveView={(view) => {
          if (isLoggedIn) {
            // This is a simplified navigation for demonstration.
            // In a real app, you might use React Router or similar.
            // For now, we just ensure the page doesn't scroll to a non-existent anchor.
            // A full router implementation would be more robust.
          } else {
            // If not logged in, clicking these links will scroll to sections on the landing page
            window.location.hash = view; // This handles the landing page navigation
          }
        }}
        toggleMobileMenu={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
        isMobileMenuOpen={isMobileMenuOpen}
      />

      {isLoggedIn ? (
        <DashboardLayout
          theme={theme}
          toggleTheme={toggleTheme}
          handleLogout={handleLogout}
          isSidebarCollapsed={isSidebarCollapsed}
          toggleSidebar={() => setIsSidebarCollapsed(!isSidebarCollapsed)}
        />
      ) : (
        <main>
          <HeroSection />
          <FeaturesSection />
          <TestimonialsSection />
          <CtaSection />
          <PricingSection />
        </main>
      )}
      {!isLoggedIn && <Footer />} {/* Footer is only visible when not logged in */}
    </div>
  );
};

export default App;
