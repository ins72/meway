FROM php:8.2-fpm-alpine

# Set working directory
WORKDIR /var/www/html

# Install system dependencies
RUN apk add --no-cache \
    nginx \
    supervisor \
    nodejs \
    npm \
    git \
    curl \
    libpng-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    mysql-client \
    redis \
    openssl \
    bash

# Install PHP extensions
RUN docker-php-ext-install \
    pdo_mysql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip \
    intl

# Install Redis extension
RUN pecl install redis && docker-php-ext-enable redis

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy application files first
COPY . .

# Create setup wizard directory
RUN mkdir -p /var/www/html/setup

# Create Nginx configuration for setup wizard
RUN mkdir -p /etc/nginx/conf.d

# Copy Nginx main config
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf 2>/dev/null || echo 'user nginx; worker_processes auto; error_log /var/log/nginx/error.log warn; pid /var/run/nginx.pid; events { worker_connections 1024; } http { include /etc/nginx/mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; include /etc/nginx/conf.d/*.conf; }' > /etc/nginx/nginx.conf

# Copy setup wizard config
COPY docker/nginx/setup.conf /etc/nginx/conf.d/setup.conf 2>/dev/null || echo 'server { listen 8080 default_server; server_name _; root /var/www/html/setup; index index.php; allow all; location / { try_files $uri $uri/ /index.php?$query_string; } location ~ \.php$ { fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } } server { listen 80 default_server; server_name _; root /var/www/html/public; index index.php; allow all; location / { try_files $uri $uri/ /index.php?$query_string; } location ~ \.php$ { fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; } }' > /etc/nginx/conf.d/setup.conf

# Copy Supervisor configuration
COPY docker/supervisor/supervisord.conf /etc/supervisord.conf 2>/dev/null || echo '[supervisord] nodaemon=true user=root [program:php-fpm] command=php-fpm --nodaemonize autostart=true autorestart=true [program:nginx] command=nginx -g "daemon off;" autostart=true autorestart=true' > /etc/supervisord.conf

# Copy setup wizard files
COPY docker/setup-wizard/index.php /var/www/html/setup/index.php 2>/dev/null || echo '<?php echo "Setup wizard will be loaded here"; ?>' > /var/www/html/setup/index.php

# Install dependencies if they exist
RUN if [ -f "composer.json" ]; then composer install --optimize-autoloader --no-dev --no-interaction --ignore-platform-reqs || true; fi
RUN if [ -f "package.json" ]; then npm ci && npm run build || true; fi

# Create required directories
RUN mkdir -p \
    resources/views/livewire \
    storage/app/public \
    storage/framework/cache \
    storage/framework/sessions \
    storage/framework/views \
    storage/logs \
    bootstrap/cache \
    public/storage \
    /var/log/supervisor

# Set permissions
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 755 /var/www/html/storage && \
    chmod -R 755 /var/www/html/bootstrap/cache && \
    chmod -R 755 /var/www/html/setup

# Create startup script
RUN echo '#!/bin/bash' > /startup.sh && \
    echo 'echo "=========================================="' >> /startup.sh && \
    echo 'echo "ðŸš€ Mewayz v2 Setup Ready"' >> /startup.sh && \
    echo 'echo "=========================================="' >> /startup.sh && \
    echo 'echo ""' >> /startup.sh && \
    echo 'echo "Setup Wizard: http://YOUR_SERVER_IP:8080"' >> /startup.sh && \
    echo 'echo "Application:  http://YOUR_SERVER_IP:80"' >> /startup.sh && \
    echo 'echo ""' >> /startup.sh && \
    echo 'echo "Replace YOUR_SERVER_IP with your actual server IP"' >> /startup.sh && \
    echo 'echo ""' >> /startup.sh && \
    echo 'supervisord -c /etc/supervisord.conf' >> /startup.sh && \
    chmod +x /startup.sh

# Expose ports
EXPOSE 80 8080

# Start services
CMD ["/startup.sh"]