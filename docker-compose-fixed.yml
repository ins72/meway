version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        - PHP_FPM_WORKERS=${PHP_FPM_WORKERS:-4}
    container_name: mewayz-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    networks:
      - mewayz-network
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${DOCKER_REDIS_PASSWORD}
      - CACHE_DRIVER=${CACHE_DRIVER}
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}

  web:
    image: nginx:alpine
    container_name: mewayz-web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - mewayz-network

  db:
    image: mysql:8.0
    container_name: mewayz-db
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --max-connections=${MYSQL_MAX_CONNECTIONS:-100}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - mewayz-network

  redis:
    image: redis:7.0-alpine
    container_name: mewayz-redis
    restart: unless-stopped
    command: redis-server --requirepass ${DOCKER_REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mewayz-network

  queue:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: mewayz-queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=60
    volumes:
      - ./:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - mewayz-network
    environment:
      - APP_ENV=${APP_ENV}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${DOCKER_REDIS_PASSWORD}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
    deploy:
      replicas: ${QUEUE_WORKERS:-2}

  scheduler:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: mewayz-scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    volumes:
      - ./:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - mewayz-network
    environment:
      - APP_ENV=${APP_ENV}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - REDIS_HOST=redis

  websocket:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: mewayz-websocket
    restart: unless-stopped
    command: php artisan websockets:serve --host=0.0.0.0 --port=6001
    ports:
      - "6001:6001"
    volumes:
      - ./:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - mewayz-network
    environment:
      - APP_ENV=${APP_ENV}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - REDIS_HOST=redis

volumes:
  mysql_data:
  redis_data:

networks:
  mewayz-network:
    driver: bridge